name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Run tests
        run: mvn test

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SonarQube Scanner
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONARQUBE_URL: ${{ secrets.SONARQUBE_URL }}

  deploy:
    name: Deploy to VM
    runs-on: ubuntu-latest
    needs: [build, test, sonarqube]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to VM
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no user@vm-address << 'EOF'
            docker pull my-dockerhub-username/my-app:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -d --name my-app my-dockerhub-username/my-app:latest
          EOF
